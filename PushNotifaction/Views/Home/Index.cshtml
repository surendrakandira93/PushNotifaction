@{
    Layout = null;
}
<!DOCTYPE html>
<!--
Copyright (c) 2016 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<html>
<head>
    <meta charset=utf-8 />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://www.gstatic.com/firebasejs/5.5.7/firebase.js"></script>
    <title>Firebase Cloud Messaging Example</title>
    <!-- Material Design Theming -->
    <link rel="stylesheet" href="https://code.getmdl.io/1.1.3/material.orange-indigo.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <script defer src="https://code.getmdl.io/1.1.3/material.min.js"></script>

    <link rel="manifest" href="/manifest.json">

</head>
<body>
    <div class="demo-layout mdl-layout mdl-js-layout mdl-layout--fixed-header">
        <!-- Header section containing title -->
        <header class="mdl-layout__header mdl-color-text--white mdl-color--light-blue-700">
            <div class="mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-grid">
                <div class="mdl-layout__header-row mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--8-col-desktop">
                    <h3>Firebase Cloud Messaging</h3>
                </div>
            </div>
        </header>
        <main class="mdl-layout__content mdl-color--grey-100">
            <div class="mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-grid">
                <!-- Container for the Table of content -->
                <div class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop">
                    <div class="mdl-card__supporting-text mdl-color-text--grey-600">
                        <!-- div to display the generated Instance ID token -->
                        <div id="token_div" style="display: none;">
                            <h4>Instance ID Token</h4>
                            <p id="token" style="word-break: break-all;"></p>
                            <button class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored"
                                    onclick="deleteToken()">
                                Delete Token
                            </button>
                        </div>
                        <!-- div to display the UI to allow the request for permission to
                             notify the user. This is shown if the app has not yet been
                             granted permission to notify. -->
                        <div id="permission_div" style="display: none;">
                            <h4>Needs Permission</h4>
                            <p id="token"></p>
                            <button class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored"
                                    onclick="requestPermission()">
                                Request Permission
                            </button>
                        </div>
                        <!-- div to display messages received by this app. -->
                        <div id="messages"></div>
                    </div>
                </div>
            </div>
        </main>
    </div>
    <script src="https://www.gstatic.com/firebasejs/5.5.7/firebase.js"></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script>
        if ('/serviceWorker' in navigator) {
            window.addEventListener('load', function () {
                navigator.serviceWorker.register('firebase-messaging-sw.js').then((reg) => {
                    if (Notification.permission === "granted") {
                        $("#token_div").show();
                    } else if (Notification.permission === "blocked") {
                        $("#NoSupport").show();
                    } else {
                        $("#permission_div").show();
                        $("#PromptForAccessBtn").click(() => requestNotificationAccess(reg));
                    }
                });
            });
        }


        // Initialize Firebase


        // Initialize Firebase
        var config = {
            apiKey: "AIzaSyC4M54g9XIf8pM7NffL9KgkQ0MkccJPqYQ",
            authDomain: "kandirasoft-c2f41.firebaseapp.com",
            projectId: "kandirasoft-c2f41",
            storageBucket: "kandirasoft-c2f41.appspot.com",
            messagingSenderId: "657683851581",
            appId: "1:657683851581:web:9bc7e095a9b0930bcb7d54",
            measurementId: "G-Y3PPZHHMMT"
        };
        firebase.initializeApp(config);


        const messaging = firebase.messaging();
        messaging.usePublicVapidKey("BIPbKC0v6mVC_fw3a8RIzY41CWq_MkSFQaxRKVS0lS68QVhmWqDi_svJDwd2yFr6n8UUH-wUGa2tUPUTPtZZZ7o");

        messaging.requestPermission().then(function () {
            console.log('Notification permission granted.');

            messaging.getToken().then(function (currentToken) {
                debugger;
                if (currentToken) {
                    console.log(currentToken);
                    $("#token").html(currentToken);
                    SaveToken(currentToken);
                } else {
                    // Show permission request.
                    console.log('No Instance ID token available. Request permission to generate one.');
                    // Show permission UI.

                }
            }).catch(function (err) {
                console.log('An error occurred while retrieving token. ', err);

            });


        }).catch(function (err) {
            console.log('Unable to get permission to notify.', err);
        });


        messaging.onMessage(function (payload) {
            console.log('Message received. ', payload);
            alert(payload.notification.body);
            // ...
        });

        function SaveToken(currentToken) {
            console.log(currentToken);
            alert(currentToken);
            //var xhttp = new XMLHttpRequest();
            //var url = '/home/PushNotificationSave?token=' + currentToken;
            //xhttp.open("GET", url, true);
            //xhttp.send();
          
        }
    </script>



</body>
</html>
